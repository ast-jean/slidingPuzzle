{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tiles,setTiles]=useState([1,2,3,4,5,6,7,8,0]);const[moveCount,setMoveCount]=useState(0);const[winMsg,setWinMsg]=useState(\"\");const[userMoves,setUserMoves]=useState([]);const[isSolvedBool,setIsSolved]=useState(false);const[enableGame,setEnableGame]=useState(false);const[isAiSolveEnabled,setAiSolveEnabled]=useState(false);const[isAiSearching,setAiSearching]=useState(false);const shuffleTiles=()=>{const mixed=mixTiles();setTiles(mixed);setMoveCount(0);setEnableGame(true);setWinMsg('');setIsSolved(false);setUserMoves([mixed]);setAiSolveEnabled(true);console.log(\"Tiles:\",mixed);console.log(\"Moves:\"+moveCount,mixed);};const addMove=newTiles=>{setUserMoves(prevMoves=>[...prevMoves,newTiles]);};const handleFetchAiSolution=()=>{fetchAiSolution(tiles);// Pass `tiles` as `tilesToSearch`\n};const fetchAiSolution=async tilesToSearch=>{// Validate the input tilesToSearch\nif(!tilesToSearch||tilesToSearch.length!==9){console.error(\"Invalid tilesToSearch provided. It must be an array of 9 numbers.\",tilesToSearch);return;}try{// Fetch AI solution from the backend\nsetAiSearching(true);const response=await fetch(\"http://localhost:8080/ai-solution\",{method:\"POST\",body:JSON.stringify({currentPuzzle:tilesToSearch.join('')// Convert number[] to string e.g. \"123456780\"\n}),headers:{'Content-Type':'application/json'}});if(response.ok){const data=await response.json();// Assuming the response is an array of strings like [\"123456708\", \"123456780\"]\n// setAiMovesQueue(data);\n// aiMoveIndexRef.current = 0; // Reset AI move index\n}else{console.error(\"Failed to fetch AI solution:\",response.statusText);}}catch(error){console.error(\"Error fetching AI solution:\",error);setAiSearching(false);//display error with UI\n}};//Debug Console prints\nuseEffect(()=>{console.log(\"Updated tiles:\",tiles);},[tiles]);useEffect(()=>{console.log(\"Updated move count:\",moveCount);},[moveCount]);useEffect(()=>{console.log(\"Updated user move:\",userMoves);},[userMoves]);// Parse the puzzle from the URL hash\nuseEffect(()=>{const hash=window.location.hash.slice(1);// Remove the '#' symbol\nif(hash){let newTiles=hash.split('').map(Number);if(isSolvable(newTiles)){const customTiles=hash.split('').map(Number);setTiles(customTiles);setMoveCount(0);setEnableGame(true);setWinMsg('');setIsSolved(false);setUserMoves([customTiles]);setAiSolveEnabled(true);}else{alert('Invalid puzzle in URL. Using default puzzle.');}}else{setTiles([1,2,3,4,5,6,7,8,0]);// Default puzzle\n}},[]);///////////////////////\nconst handleTileClick=index=>{console.log(tiles);if(isSolved(tiles)||enableGame===false){console.log(\"Puzzle already solved!\");return tiles;}const tileValue=tiles[index];if(tileValue===0){return tiles;}console.log(\"Clicked tile at index \".concat(index,\", value: \").concat(tileValue,\", moves: \").concat(moveCount+1));let newTiles=[...tiles];if(tiles[index-3]===0&&index-3>=0||// Move up\ntiles[index+3]===0&&index+3<tiles.length||// Move down\ntiles[index-1]===0&&index%3!==0||// Move left\ntiles[index+1]===0&&(index+1)%3!==0// Move right\n){setAiSolveEnabled(false);if(tiles[index-3]===0&&index-3>=0){// Move up\n[newTiles[index],newTiles[index-3]]=[newTiles[index-3],newTiles[index]];}else if(tiles[index+3]===0&&index+3<tiles.length){// Move down\n[newTiles[index],newTiles[index+3]]=[newTiles[index+3],newTiles[index]];}else if(tiles[index-1]===0&&index%3!==0){// Move left\n[newTiles[index],newTiles[index-1]]=[newTiles[index-1],newTiles[index]];}else if(tiles[index+1]===0&&(index+1)%3!==0){// Move right\n[newTiles[index],newTiles[index+1]]=[newTiles[index+1],newTiles[index]];}setTiles(newTiles);setMoveCount(count=>count+1);addMove(newTiles);}return newTiles;};function isSolved(tiles){if(moveCount===0)return false;for(let i=0;i<tiles.length-2;i++){if(tiles[i]>tiles[i+1]){setIsSolved(false);return false;}}setIsSolved(true);setAiSolveEnabled(false);return true;}function isSolvable(tiles){let inversions=0;// Count inversions (ignoring 0)\nfor(let i=0;i<tiles.length;i++){for(let j=i+1;j<tiles.length;j++){if(tiles[i]>0&&tiles[j]>0&&tiles[i]>tiles[j]){inversions++;}}}// For a 3Ã—3 puzzle, solvability depends on inversions being even\nreturn inversions%2===0;}function mixTiles(){const tiles=[1,2,3,4,5,6,7,8,0];// Fisher-Yates Shuffle\nfor(let i=tiles.length-1;i>0;i--){const randomIndex=Math.floor(Math.random()*(i+1));[tiles[i],tiles[randomIndex]]=[tiles[randomIndex],tiles[i]];}// Check solvability for 3x3 puzzle\nif(!isSolvable(tiles)){[tiles[0],tiles[1]]=[tiles[1],tiles[0]];}return tiles;}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pyro \".concat(isSolvedBool?'':'hidden'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"before\"}),/*#__PURE__*/_jsx(\"div\",{className:\"after\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\"3\\xD73 Sliding Puzzle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:shuffleTiles,children:\"Shuffle\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn\",onClick:handleFetchAiSolution,disabled:!isAiSolveEnabled,children:[\"\".concat(!isAiSearching?'Show AI solve':'Searching Solution...'),/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(isAiSearching?'':'hidden'),children:/*#__PURE__*/_jsx(\"span\",{className:\"loader\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loader-element\"})})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"puzzle-grid\",children:tiles.map((value,idx)=>{const isEmpty=value===0;// 0 is empty\n//Add a classname for rounded corners\nconst className=\"\\n            puzzle-cell \\n            \".concat(isEmpty?'empty':'',\" \\n            \").concat(idx===0?'top-left':'',\" \\n            \").concat(idx===2?'top-right':'',\" \\n            \").concat(idx===6?'bottom-left':'',\" \\n            \").concat(idx===8?'bottom-right':'',\"\\n          \").trim();return/*#__PURE__*/_jsx(\"div\",{className:className,onClick:()=>{const updatedTiles=handleTileClick(idx);// Get the updated tiles\nif(isSolved(updatedTiles)){setWinMsg(\"SOLVED! after \"+(moveCount+1)+\" moves!\");}else{console.log(\"Not SOLVED!\");}},children:isEmpty?'':value},idx);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"count\",children:[\"Moves: \",moveCount]}),/*#__PURE__*/_jsx(\"div\",{className:\"winMsg\",children:winMsg})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","tiles","setTiles","moveCount","setMoveCount","winMsg","setWinMsg","userMoves","setUserMoves","isSolvedBool","setIsSolved","enableGame","setEnableGame","isAiSolveEnabled","setAiSolveEnabled","isAiSearching","setAiSearching","shuffleTiles","mixed","mixTiles","console","log","addMove","newTiles","prevMoves","handleFetchAiSolution","fetchAiSolution","tilesToSearch","length","error","response","fetch","method","body","JSON","stringify","currentPuzzle","join","headers","ok","data","json","statusText","hash","window","location","slice","split","map","Number","isSolvable","customTiles","alert","handleTileClick","index","isSolved","tileValue","concat","count","i","inversions","j","randomIndex","Math","floor","random","className","children","onClick","disabled","value","idx","isEmpty","trim","updatedTiles"],"sources":["/home/ast-jean/sliding-puzzle/react/app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\n\nconst App: React.FC = () => {\n  const [tiles, setTiles] = useState<number[]>([1, 2, 3, 4, 5, 6, 7, 8, 0]);\n  const [moveCount, setMoveCount] = useState<number>(0);\n  const [winMsg, setWinMsg] = useState<string>(\"\");\n  const [userMoves, setUserMoves] = useState<number[][]>([]);\n  const [isSolvedBool, setIsSolved] = useState(false);\n  const [enableGame, setEnableGame] = useState(false);\n  const [isAiSolveEnabled, setAiSolveEnabled] = useState(false);\n  const [isAiSearching, setAiSearching] = useState(false);\n\n  const shuffleTiles = () => {\n    const mixed = mixTiles();\n    setTiles(mixed);\n    setMoveCount(0);\n    setEnableGame(true);\n    setWinMsg('');\n    setIsSolved(false);\n    setUserMoves([mixed]);\n    setAiSolveEnabled(true);\n\n    console.log(\"Tiles:\", mixed)\n    console.log(\"Moves:\"+ moveCount, mixed);\n  };\n\n  const addMove = (newTiles: number[]) => {\n    setUserMoves((prevMoves) => [...prevMoves, newTiles]);\n};\n\nconst handleFetchAiSolution = () => {\n  fetchAiSolution(tiles); // Pass `tiles` as `tilesToSearch`\n};\n\nconst fetchAiSolution = async (tilesToSearch: number[]): Promise<void> => {\n\n  // Validate the input tilesToSearch\n  if (!tilesToSearch || tilesToSearch.length !== 9) {\n    console.error(\"Invalid tilesToSearch provided. It must be an array of 9 numbers.\", tilesToSearch);\n    return;\n  }\n\n  try {\n    // Fetch AI solution from the backend\n    setAiSearching(true);\n    const response = await fetch(\"http://localhost:8080/ai-solution\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        currentPuzzle: tilesToSearch.join(''), // Convert number[] to string e.g. \"123456780\"\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.ok) {\n      const data: number[][] = await response.json(); \n      // Assuming the response is an array of strings like [\"123456708\", \"123456780\"]\n      // setAiMovesQueue(data);\n      // aiMoveIndexRef.current = 0; // Reset AI move index\n    } else {\n      console.error(\"Failed to fetch AI solution:\", response.statusText);\n    }\n  } catch (error) {\n    console.error(\"Error fetching AI solution:\", error);\n    setAiSearching(false);\n    //display error with UI\n  }\n};\n\n\n//Debug Console prints\n  useEffect(() => {\n    console.log(\"Updated tiles:\", tiles);\n  }, [tiles]);\n\n    useEffect(() => {\n    console.log(\"Updated move count:\", moveCount);\n  }, [moveCount]);\n\n  useEffect(() => {\n    console.log(\"Updated user move:\", userMoves);\n  }, [userMoves]);\n\n  // Parse the puzzle from the URL hash\n  useEffect(() => {\n    const hash = window.location.hash.slice(1); // Remove the '#' symbol\n    if (hash) {\n\n      let newTiles = hash.split('').map(Number)\n      if (isSolvable(newTiles)) {\n        const customTiles = hash.split('').map(Number);\n        setTiles(customTiles);\n        setMoveCount(0);\n        setEnableGame(true);\n        setWinMsg('');\n        setIsSolved(false);\n        setUserMoves([customTiles]);\n        setAiSolveEnabled(true);\n      } else {\n        alert('Invalid puzzle in URL. Using default puzzle.');\n      }\n    } else {\n      setTiles([1, 2, 3, 4, 5, 6, 7, 8, 0]); // Default puzzle\n    }\n  }, []);\n\n///////////////////////\n\n  const handleTileClick = (index: number): number[] => {\n    console.log(tiles);\n\n    if (isSolved(tiles) || enableGame === false) {\n      console.log(\"Puzzle already solved!\");\n      return tiles;\n    }\n  \n    const tileValue = tiles[index];\n    if (tileValue === 0) { return tiles; }\n    console.log(`Clicked tile at index ${index}, value: ${tileValue}, moves: ${moveCount + 1}`);\n    let newTiles = [...tiles];\n    if (\n      (tiles[index - 3] === 0 && index - 3 >= 0) || // Move up\n      (tiles[index + 3] === 0 && index + 3 < tiles.length) || // Move down\n      (tiles[index - 1] === 0 && index % 3 !== 0) || // Move left\n      (tiles[index + 1] === 0 && (index + 1) % 3 !== 0) // Move right\n      ) {\n          setAiSolveEnabled(false);\n          if (tiles[index - 3] === 0 && index - 3 >= 0) {\n            // Move up\n            [newTiles[index], newTiles[index - 3]] = [newTiles[index - 3], newTiles[index]];\n          } else if (tiles[index + 3] === 0 && index + 3 < tiles.length) {\n            // Move down\n            [newTiles[index], newTiles[index + 3]] = [newTiles[index + 3], newTiles[index]];\n          } else if (tiles[index - 1] === 0 && index % 3 !== 0) {\n            // Move left\n            [newTiles[index], newTiles[index - 1]] = [newTiles[index - 1], newTiles[index]];\n          } else if (tiles[index + 1] === 0 && (index + 1) % 3 !== 0) {\n            // Move right\n            [newTiles[index], newTiles[index + 1]] = [newTiles[index + 1], newTiles[index]];\n          }\n          setTiles(newTiles);\n          setMoveCount((count) => count + 1);\n          addMove(newTiles);\n        }\n    return newTiles;\n  };\n\n  function isSolved(tiles: number[]): boolean {\n    if (moveCount === 0)\n      return false;\n    for (let i = 0; i < tiles.length - 2; i++){\n      if (tiles[i] > tiles[i+1]){\n          setIsSolved(false);\n          return false;\n        }\n    }\n    setIsSolved(true);\n    setAiSolveEnabled(false);\n    return true;\n  }\n\n  function isSolvable(tiles: number[]): boolean {\n    let inversions = 0;\n    // Count inversions (ignoring 0)\n    for (let i = 0; i < tiles.length; i++) {\n      for (let j = i + 1; j < tiles.length; j++) {\n        if (tiles[i] > 0 && tiles[j] > 0 && tiles[i] > tiles[j]) {\n          inversions++;\n        }\n      }\n    }\n  \n    // For a 3Ã—3 puzzle, solvability depends on inversions being even\n    return inversions % 2 === 0;\n  }\n\n  function mixTiles(): number[] {\n    const tiles = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n  \n    // Fisher-Yates Shuffle\n    for (let i = tiles.length - 1; i > 0; i--) {\n      const randomIndex = Math.floor(Math.random() * (i + 1));\n      [tiles[i], tiles[randomIndex]] = [tiles[randomIndex], tiles[i]];\n    }\n  \n    // Check solvability for 3x3 puzzle\n    if (!isSolvable(tiles)) {\n      [tiles[0], tiles[1]] = [tiles[1], tiles[0]];\n    }\n    return tiles;\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <div className={`pyro ${isSolvedBool ? '' : 'hidden'}`}>\n        <div className=\"before\"></div>\n        <div className=\"after\"></div>\n      </div>\n      <h1>3Ã—3 Sliding Puzzle</h1>\n      <div className='buttons'>\n      <button className=\"btn\" onClick={shuffleTiles}>Shuffle</button>\n      <button className=\"btn\" onClick={handleFetchAiSolution} disabled={!isAiSolveEnabled}>{`${!isAiSearching ? 'Show AI solve' : 'Searching Solution...'}`}\n      <div className={`${isAiSearching ? '' : 'hidden'}`}>\n      <span className={`loader`}>\n        <div className=\"loader-element\"></div>\n      </span>\n      </div>\n      </button>\n      </div>\n      <div className=\"puzzle-grid\">\n        {tiles.map((value, idx) => {\n          const isEmpty = value === 0; // 0 is empty\n          //Add a classname for rounded corners\n          const className = `\n            puzzle-cell \n            ${isEmpty ? 'empty' : ''} \n            ${idx === 0 ? 'top-left' : ''} \n            ${idx === 2 ? 'top-right' : ''} \n            ${idx === 6 ? 'bottom-left' : ''} \n            ${idx === 8 ? 'bottom-right' : ''}\n          `.trim();\n\n          return (\n            <div\n            key={idx}\n            className={className}\n            onClick={() => {\n              const updatedTiles = handleTileClick(idx); // Get the updated tiles\n              if (isSolved(updatedTiles)) {\n                setWinMsg(\"SOLVED! after \" + (moveCount + 1) + \" moves!\")\n              } else {\n                console.log(\"Not SOLVED!\");\n              }\n            }}\n          >\n            {isEmpty ? '' : value}\n          </div>\n          );\n        })}\n      </div>\n      <div className=\"count\">Moves: {moveCount}</div>\n      <div className=\"winMsg\">{winMsg}</div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}