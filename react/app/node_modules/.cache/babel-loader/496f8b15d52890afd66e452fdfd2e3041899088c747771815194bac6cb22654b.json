{"ast":null,"code":"var _jsxFileName = \"/home/ast-jean/sliding-puzzle/react/app/src/App.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const handleTileClick = index => {\n    const tileValue = tiles[index];\n    if (tileValue === 0) {\n      // It's the empty slot, do nothing\n      return;\n    }\n    // You'd implement logic here to see if the clicked tile is adjacent\n    // to the empty slot, and swap if valid. For now, just log it.\n    console.log(`Clicked tile at index ${index}, value: ${tileValue}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"3\\xD73 Puzzle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('Shuffle not implemented yet'),\n          children: \"Shuffle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('Reset not implemented yet'),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert('Solve not implemented yet'),\n          children: \"Solve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"puzzle-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#F44336'\n          },\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#E91E63'\n          },\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#9C27B0'\n          },\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#673AB7'\n          },\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#3F51B5'\n          },\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#2196F3'\n          },\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#03A9F4'\n          },\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#00BCD4'\n          },\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"puzzle-cell\",\n          style: {\n            backgroundColor: '#009688'\n          },\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","handleTileClick","index","tileValue","tiles","console","log","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alert","style","backgroundColor","_c","$RefreshReg$"],"sources":["/home/ast-jean/sliding-puzzle/react/app/src/App.tsx"],"sourcesContent":["const App: React.FC = () => {\n\n  const handleTileClick = (index: number) => {\n    const tileValue = tiles[index];\n    if (tileValue === 0) {\n      // It's the empty slot, do nothing\n      return;\n    }\n    // You'd implement logic here to see if the clicked tile is adjacent\n    // to the empty slot, and swap if valid. For now, just log it.\n    console.log(`Clicked tile at index ${index}, value: ${tileValue}`);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>3Ã—3 Puzzle</h1>\n        <div className=\"button-container\">\n          <button onClick={() => alert('Shuffle not implemented yet')}>\n            Shuffle\n          </button>\n          <button onClick={() => alert('Reset not implemented yet')}>\n            Reset\n          </button>\n          <button onClick={() => alert('Solve not implemented yet')}>\n            Solve\n          </button>\n        </div>\n      </header>\n\n      <div className=\"puzzle-container\">\n        <div className=\"puzzle-grid\">\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#F44336' }}>1</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#E91E63' }}>2</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#9C27B0' }}>3</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#673AB7' }}>4</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#3F51B5' }}>5</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#2196F3' }}>6</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#03A9F4' }}>7</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#00BCD4' }}>8</div>\n          <div className=\"puzzle-cell\" style={{ backgroundColor: '#009688' }}>9</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,MAAMA,GAAa,GAAGA,CAAA,KAAM;EAE1B,MAAMC,eAAe,GAAIC,KAAa,IAAK;IACzC,MAAMC,SAAS,GAAGC,KAAK,CAACF,KAAK,CAAC;IAC9B,IAAIC,SAAS,KAAK,CAAC,EAAE;MACnB;MACA;IACF;IACA;IACA;IACAE,OAAO,CAACC,GAAG,CAAC,yBAAyBJ,KAAK,YAAYC,SAAS,EAAE,CAAC;EACpE,CAAC;EAGD,oBACEI,OAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBF,OAAA;MAAQC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BF,OAAA;QAAAE,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBN,OAAA;QAAKC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BF,OAAA;UAAQO,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,6BAA6B,CAAE;UAAAN,QAAA,EAAC;QAE7D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTN,OAAA;UAAQO,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,2BAA2B,CAAE;UAAAN,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTN,OAAA;UAAQO,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,2BAA2B,CAAE;UAAAN,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETN,OAAA;MAAKC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BF,OAAA;QAAKC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BF,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3EN,OAAA;UAAKC,SAAS,EAAC,aAAa;UAACQ,KAAK,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAE;UAAAR,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GA9CIlB,GAAa;AAgDnB,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}